[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/Menus/Backgrounds/blackslidescreen.png" type="Texture" id=1]
[ext_resource path="res://AutoLoads/SceneLoader.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// Ranges from 0 to 1 over the course of the transition.
// We use this to actually animate the shader.
uniform float progress : hint_range(0, 1);

// Size of each diamond, in pixels.
uniform float diamondPixelSize = 10f;

void fragment() {
	float xFraction = fract(FRAGCOORD.x / diamondPixelSize);
	float yFraction = fract(FRAGCOORD.y / diamondPixelSize);
	float xDistance = abs(xFraction - 0.5);
	float yDistance = abs(yFraction - 0.5);
	if (xDistance + yDistance + UV.x + UV.y > progress * 4f) {
		discard;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/progress = 0.0
shader_param/diamondPixelSize = 20.0

[sub_resource type="Animation" id=5]
resource_name = "in"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 0.5 ),
"update": 0,
"values": [ Vector2( 640, -640 ), Vector2( 640, 380 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "in_playstate"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 0.5 ),
"update": 0,
"values": [ Vector2( 640, -640 ), Vector2( 640, 380 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "old_in"
length = 1.4
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "old_out"
length = 0.7
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=6]
resource_name = "out"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( 640, 380 ), Vector2( 640, 1500 ) ]
}

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 2

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
visible = false
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
anims/in = SubResource( 5 )
anims/in_playstate = SubResource( 7 )
anims/old_in = SubResource( 3 )
anims/old_out = SubResource( 4 )
anims/out = SubResource( 6 )

[node name="Sprite" type="Sprite" parent="CanvasLayer"]
position = Vector2( 640, -640 )
texture = ExtResource( 1 )

[connection signal="animation_finished" from="CanvasLayer/AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
